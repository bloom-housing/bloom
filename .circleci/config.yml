version: 2.1
orbs:
  node: circleci/node@5

executors:
  cypress-node:
    docker:
      - image: "cypress/base:18.14.1"
      - image: "cimg/postgres:12.10"
        environment:
          POSTGRES_USER: bloom-ci
          # Never do this in production or with any sensitive / non-test data:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bloom
          JURISDICTION_NAME: Bloomington
    environment:
      PORT: "3100"
      EMAIL_API_KEY: "SG.SOME-LONG-SECRET-KEY"
      APP_SECRET: "CI-LONG-SECRET-KEY"
      NODE_ENV: "development"
      # DB URL for migration and seeds:
      DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
      # DB URL for the jest tests per ormconfig.test.ts
      TEST_DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
      PARTNERS_PORTAL_URL: "http://localhost:3001"
      BACKEND_API_BASE: "http://localhost:3100"
      JURISDICTION_NAME: Bloomington
      GOOGLE_API_EMAIL: "secret-key"
      GOOGLE_API_ID: "secret-key"
      GOOGLE_API_KEY: "secret-key"
      GOOGLE_CLOUD_PROJECT_ID: "secret-key"
      SHOW_LOTTERY: "TRUE"
      SHOW_PUBLIC_LOTTERY: "TRUE"
      THROTTLE_LIMIT: 1000
      API_PASS_KEY: "some-key-here"
      HOUSING_COUNSELOR_SERVICE_URL: "/get-assistance"
      # Sample token https://docs.mapbox.com/api/accounts/tokens/#example-token-metadata-object
      MAPBOX_TOKEN: "pk.eyJ1Ijoic2NvdGhpcyIsImEiOiJjaWp1Y2ltYmUwMDBicmJrdDQ4ZDBkaGN4In0.sbihZCZJ56-fsFNKHXF8YQ"
      CLOUDINARY_KEY: "key"
      CLOUDINARY_SIGNED_PRESET: "signedpreset"
      CLOUDINARY_CLOUD_NAME: "exygy"

  standard-node:
    docker:
      - image: "cimg/node:18.14.2"
      - image: "cimg/postgres:12.10"
        environment:
          POSTGRES_USER: bloom-ci
          # Never do this in production or with any sensitive / non-test data:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bloom_prisma
          JURISDICTION_NAME: Bloomington

jobs:
  setup:
    executor: standard-node
    steps:
      - checkout
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/
  setup-backend:
    executor: standard-node
    steps:
      - checkout
      - run: yarn backend:new:install
      - save_cache:
          key: build-cache-new-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/
  cypress-public:
    executor: cypress-node
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: sites/public
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: api
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: setup db and seed
          command: yarn test:backend:new:dbsetup:withseed
      - run:
          name: run backend
          command: yarn dev
          background: true
          working_directory: api
      - run:
          name: build and run public
          command: yarn dev:server-wait-new && yarn build && yarn start
          background: true
          working_directory: sites/public
      - run:
          name: wait
          command: yarn dev:public-wait
          working_directory: sites/public
      - run:
          name: Run Cypress
          command: npx cypress run
          working_directory: sites/public
      - store_artifacts:
          path: sites/public/cypress/videos
      - store_artifacts:
          path: sites/public/cypress/screenshots
  cypress-partners:
    executor: cypress-node
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: sites/partners
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: api
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: setup db and seed
          command: yarn test:backend:new:dbsetup:withseed
      - run:
          name: run backend
          command: yarn dev
          background: true
          working_directory: api
      - run:
          name: build and run partners
          command: yarn dev:server-wait-new && yarn build && yarn start
          background: true
          working_directory: sites/partners
      - run:
          name: wait
          command: yarn dev:partners-wait
          working_directory: sites/partners
      - run:
          name: Run Cypress
          command: npx cypress run
          working_directory: sites/partners
      - store_artifacts:
          path: sites/partners/cypress/videos
      - store_artifacts:
          path: sites/partners/cypress/screenshots
  build-public:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn build:app:public
  build-partners:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn build:app:partners
  unit-test-partners:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn test:app:partners:unit
  unit-test-public:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn test:app:public:unit
  lint:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn lint
  jest-shared-helpers:
    executor: standard-node
    steps:
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn test:shared:helpers
  jest-backend:
    executor: standard-node
    steps:
      - checkout
      - restore_cache:
          key: build-cache-new-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: DB Setup + New Backend Core Tests
          working_directory: api
          command: |
            yarn install
            yarn test:cov-ci
          environment:
            PORT: "3100"
            EMAIL_API_KEY: "SG.SOME-LONG-SECRET-KEY"
            APP_SECRET: "CI-LONG-SECRET-KEY"
            # DB URL for migration and seeds:
            DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom_prisma"

workflows:
  build:
    jobs:
      - setup
      - setup-backend
      - lint:
          requires:
            - setup
      - jest-shared-helpers:
          requires:
            - setup
      - jest-backend
      - build-public:
          requires:
            - setup
      - unit-test-public:
          requires:
            - setup
      - build-partners:
          requires:
            - setup
      - unit-test-partners:
          requires:
            - setup
      - cypress-public:
          requires:
            - setup
            - setup-backend
      - cypress-partners:
          requires:
            - setup
            - setup-backend
