# AWS CodeBuild config
# This file is referenced in the infra repo as a CodeBuild buildspec target.

# These variables are set in the codebuild project definition's environment secion.
# ECR_*

version: 0.2
env:
  shell: bash

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region "${ECR_REGION}" | docker login --username AWS --password-stdin "${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"

  build:
    commands:
      - export ECR_HOST="${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"
      - export ECR_REPO="${ECR_HOST}/${ECR_NAMESPACE}"

      # Skip the test step as it is handle before merge. But re-add if you want more verification
      # - docker build . -f build/docker/Dockerfile.backend --target test -t api:test
      # - docker run api:test yarn test
      - docker build . -f build/docker/Dockerfile.backend --target run -t api:run-candidate
      - docker build . -f build/docker/Dockerfile.backend --target migrate -t api:migrate-candidate

      # Add hash and candidate tags to migration image
      - docker tag api:migrate-candidate "${ECR_REPO}/backend:migrate-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
      - docker tag api:migrate-candidate "${ECR_REPO}/backend:migrate-candidate"

      # Add hash and candidate tags to run image
      - docker tag api:run-candidate "${ECR_REPO}/backend:run-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
      - docker tag api:run-candidate "${ECR_REPO}/backend:run-candidate"

      # Push run image(s)
      - docker push "${ECR_REPO}/backend:run-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
      - docker push "${ECR_REPO}/backend:run-candidate"

      # Push migration image(s)
      - docker push "${ECR_REPO}/backend:migrate-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
      - docker push "${ECR_REPO}/backend:migrate-candidate"
