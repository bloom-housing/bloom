name: Backend Integration

on:
  pull_request:
    branches:
      - main
env:
  PORT: 3100
  EMAIL_API_KEY: 'SG.SOME-LONG-SECRET-KEY'
  APP_SECRET: 'SOME-LONG-SECRET-KEY'
  CLOUDINARY_SECRET: CLOUDINARY_SECRET
  CLOUDINARY_KEY: CLOUDINARY_KEY
  CLOUDINARY_CLOUD_NAME: "exygy"
  PARTNERS_PORTAL_URL: http://127.0.0.1:3001
  DATABASE_URL: postgres://bloom-dev:bloom@127.0.0.1:5432/bloom
  TEST_DATABASE_URL: postgres://bloom-dev:bloom@127.0.0.1:5432/bloom_test
  TWILIO_ACCOUNT_SID: 'AC.TEST'
  TWILIO_AUTH_TOKEN: 'TEST'
  MFA_CODE_VALID: '600000'
  MFA_CODE_LENGTH: 5
  AUTH_LOCK_LOGIN_COOLDOWN: '1800000'
  AUTH_LOCK_LOGIN_AFTER_FAILED_ATTEMPTS: '5'
  TIME_ZONE: America/Los_Angeles
  THROTTLE_TTL: 3600000
  THROTTLE_LIMIT: 100
  API_PASS_KEY: "some-key-here"
  LOTTERY_DAYS_TILL_EXPIRY: 45


jobs:
  backend-integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bloom-dev
          POSTGRES_USER: bloom-dev
          POSTGRES_PASSWORD: bloom
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Check postgres
        run: pg_isready -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }}

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: yarn in api dir
        working-directory: ./api
        run: yarn

      - name: Check postgres
        run: pg_isready -h 127.0.0.1 -p 5432

      - name: yarn e2e tests api
        working-directory: ./api
        run: yarn test:e2e
        env:
          PGHOST: 127.0.0.1
          PGPASSWORD: bloom
          PGUSER: bloom-dev
